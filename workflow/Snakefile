"""
Author: Miles Benton and Leah Kemp
Affiliation: ESR
Aim: A simple Snakemake workflow to process paired-end sequencing data (WGS) using bwa/GATK4. Designed to be used before vcf_annotation_pipeline.
Date created: 2019-08-21
Modified: 2020-10-09
"""

##### Set up wildcards #####

# Define samples from fastq dir and families/cohorts from pedigree dir using wildcards
SAMPLES, = glob_wildcards("../../fastq/{sample}_1.fastq.gz")
FAMILIES, = glob_wildcards("../../pedigrees/{family}_pedigree.ped")

##### Setup helper functions #####
import csv

def get_combinegvcf_command(family):
    """Return a string, a portion of the gatk CombineGVCF command which defines individuals which should be combined. This
    command is used by both the gatk_CombineGVCFs and pbrun_triocombinegvcf rules. For a particular family, we construct the
    gatk command by adding -V <individual vcf file> for each individual (defined by individual id column in the pedigree file)
    """
    filename = "../../pedigrees/" + str(family) + "_pedigree.ped"
    
    command = ""
    with open(filename, newline = '') as pedigree:

        pedigree_reader = csv.DictReader(pedigree, fieldnames = ('family', 'individual_id', 'paternal_id', 'maternal_id', 'sex', 'phenotype'), delimiter='\t')
        for individual in pedigree_reader:
            command += "-V ../results/called/" + individual['individual_id'] + "_raw_snps_indels_tmp.g.vcf "

    return command

def get_recal_resources_command(resource):
    """Return a string, a portion of the gatk BaseRecalibrator command (used in the gatk_BaseRecalibrator and the
    parabricks_germline rules) which dynamically includes each of the recalibration resources defined by the user
    in the configuration file. For each recalibration resource (element in the list), we construct the command by
    adding either --knownSites (for parabricks) or --known-sites (for gatk4) <recalibration resource file>
    """
    
    command = ""
    
    for resource in config['RECALIBRATION']['RESOURCES']:
        if config['GPU_ACCELERATED'] == "Yes" or config['GPU_ACCELERATED'] == "yes":
            command += "--knownSites " + resource + " "

        if config['GPU_ACCELERATED'] == "No" or config['GPU_ACCELERATED'] == "no":
            command += "--known-sites " + resource + " "

    return command

#### Set up report #####

report: "report/workflow.rst"

##### Target rules #####

if config['DATA'] == "Single" or config['DATA'] == 'single':
    rule all:
        input:
            "../results/qc/multiqc_report.html",
            expand("../results/mapped/{sample}_recalibrated.bam", sample = SAMPLES),
            expand("../results/called/{sample}_raw_snps_indels.vcf", sample = SAMPLES),
            

if config['DATA'] == "Cohort" or config['DATA'] == 'cohort':
    rule all:
        input:
            "../results/qc/multiqc_report.html",
            expand("../results/mapped/{sample}_recalibrated.bam", sample = SAMPLES),
            expand("../results/called/{family}_raw_snps_indels.g.vcf", family = FAMILIES)

##### Load rules #####

localrules: multiqc, pbrun_germline, pbrun_triocombinegvcf

include: "rules/fastqc.smk"

if config['TRIM'] == "No" or config['TRIM'] == "no":
    include: "rules/multiqc.smk"

if config['TRIM'] == "Yes" or config['TRIM'] == "yes":
    include: "rules/trim_galore_pe.smk"
    include: "rules/multiqc_trim.smk"

if config['GPU_ACCELERATED'] == "No" or config['GPU_ACCELERATED'] == "no":
    include: "rules/bwa_mem.smk"
    include: "rules/gatk_MarkDuplicates.smk"
    include: "rules/gatk_BaseRecalibrator.smk"
    include: "rules/gatk_ApplyBQSR.smk"

if (config['GPU_ACCELERATED'] == "No" or config['GPU_ACCELERATED'] == "no") and (config['DATA'] == "Single" or config['DATA'] == 'single'):
    include: "rules/gatk_HaplotypeCaller_single.smk"

if (config['GPU_ACCELERATED'] == "No" or config['GPU_ACCELERATED'] == "no") and (config['DATA'] == "Cohort" or config['DATA'] == 'cohort'):
    include: "rules/gatk_HaplotypeCaller_cohort.smk"
    include: "rules/gatk_CombineGVCFs.smk"
    include: "rules/gatk_GenotypeGVCFs.smk"

if config['GPU_ACCELERATED'] == "Yes" or config['GPU_ACCELERATED'] == "yes":
    include: "rules/pbrun_germline.smk"

if (config['GPU_ACCELERATED'] == "Yes" or config['GPU_ACCELERATED'] == "yes") and (config['DATA'] == "Cohort" or config['DATA'] == 'cohort'):
    include: "rules/pbrun_triocombinegvcf.smk"
    include: "rules/gatk_GenotypeGVCFs.smk"